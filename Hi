const express = require("express");
const app = express();
const PORT = 3000;

app.use(express.json()); // Middleware to parse JSON

// In-memory book collection
let books = [];

// GET /whoami - Returns Student Number
app.get("/whoami", (req, res) => {
    res.json({ studentNumber: "12345678" });
});

// GET /books - Returns All Books
app.get("/books", (req, res) => {
    res.json(books);
});

// GET /books/:id - Returns a Specific Book
app.get("/books/:id", (req, res) => {
    const book = books.find(b => b.id === req.params.id);
    if (!book) {
        return res.status(404).json({ error: "Book not found" });
    }
    res.json(book);
});

// POST /books - Adds a New Book
app.post("/books", (req, res) => {
    const { id, title, details } = req.body;

    if (!id || !title || !details) {
        return res.status(400).json({ error: "Missing required book details" });
    }

    books.push({ id, title, details });
    res.status(201).json({ message: "Book added successfully" });
});

// PUT /books/:id - Updates an Existing Book
app.put("/books/:id", (req, res) => {
    const { title, details } = req.body;
    const book = books.find(b => b.id === req.params.id);

    if (!book) {
        return res.status(404).json({ error: "Book not found" });
    }

    if (title) book.title = title;
    if (details) book.details = details;

    res.json({ message: "Book updated successfully" });
});

// DELETE /books/:id - Deletes a Book
app.delete("/books/:id", (req, res) => {
    const index = books.findIndex(b => b.id === req.params.id);

    if (index === -1) {
        return res.status(404).json({ error: "Book not found" });
    }

    books.splice(index, 1);
    res.json({ message: "Book deleted successfully" });
});

// Start the server
app.listen(PORT, () => {
    console.log("Server is running on port " + PORT);
});
